#!/bin/bash
# -----------------------------------------------------------------------------
# nrnivmodl-core uses make to compile additonal mod files for coreneuron
# Copyright 2019 Blue Brain Project
# -----------------------------------------------------------------------------
set -e

APP_NAME=$(basename $0)
_PARENT="$(dirname $BASH_SOURCE)/.."
ROOTDIR=$(perl -e "use Cwd 'abs_path'; print abs_path('$_PARENT')")
MAKE_OPTIONS="MECH_NAME NMODL_BINARY DESTDIR INCFLAGS LINKFLAGS MODS_PATH VERBOSE"
PARALLELISM=4
SAVE_FILE="@CMAKE_HOST_SYSTEM_PROCESSOR@/nrnivmodl_options.txt"
params_MODS_PATH="."

# To support build + install later we save/restore options
# Attempt to load previous definitions
if [ -f "$SAVE_FILE" ]; then
    echo "[INFO] Loading definitions from previous nrnivmodl-core execution"
    while read line; do
        echo " + $line" && eval "$line"
    done < "$SAVE_FILE"
fi

# Parse args (overriding)
while getopts "n:m:v:d:i:l:p:hV" OPT; do
    case "$OPT" in
    n)
        params_MECH_NAME="$OPTARG";;
    m)
        params_NMODL_BINARY="$OPTARG";;
    d)
        params_DESTDIR="$OPTARG";;
    i)
        params_INCFLAGS="$OPTARG";;
    l)
        params_LINKFLAGS="$OPTARG";;
    V)
        params_VERBOSE=1;;
    p)
        PARALLELISM="$OPTARG";;
    h)
        echo "$APP_NAME [options, ...] [mods_path]"
        echo "Options:"
        echo "  -n <name>       The model name, used as a suffix in the shared library"
        echo "  -m <mod2c_bin>  NMODL code generation compiler path"
        echo "  -i <incl_flags> Definitions passed to the compiler, typically '-I dir..'"
        echo "  -l <link_flags> Definitions passed to the linker, typically '-Lx -lylib..'"
        echo "  -d <dest_dir>   Install to dest_dir. Default: off - Only build in {ARCH}"\
             "        Consider using this option on a second call. Params are preserved."
        echo "  -V              Verbose: show commands executed by make"
        echo "  -p <n_procs>    Make parallelism. Default: 4"
        exit 0;;
    ?)
        exit 1;;
    esac
done

shift $(($OPTIND - 1))

if [ $# -gt 1 ]; then
    echo "[ERROR] $APP_NAME expects at most one mod dir. See syntax: '$APP_NAME -h' "
    exit 1
fi


# If defined mods dir be in $1
if [ $# -eq 1 ]; then
    # Note: due to bug #712 makefile wont handle mod dir with spaces, so we let it fail here
    params_MODS_PATH=$1
fi
if [ -d $params_MODS_PATH ]; then
    # warn if no mod files provided
    ls $params_MODS_PATH/*.mod || echo "WARNING: No mods found!"
else
    echo "FATAL: Invalid mods directory: '$params_MODS_PATH'"
    exit 1
fi

# Output options & populate make_params
mkdir -p "$(dirname "$SAVE_FILE")"
echo "# nrnivmodl-core options. Mods location: $params_MODS_PATH" > $SAVE_FILE


# Build params to make command (and save them to file)
make_params=("ROOT=${ROOTDIR}")

for param in $MAKE_OPTIONS; do
    var="params_${param}"
    if [ "${!var+x}" ]; then
        make_params+=("$param=${!var}")
        echo "$var=\"${!var}\""
    fi
done >> "$SAVE_FILE"

# If -d (deploy) provided, call "make install"
if [ "$params_DESTDIR" ]; then
    make_params+=("install")
fi

echo "[INFO] Running make with params: ${make_params[@]}"
make -j$PARALLELISM -f "${ROOTDIR}/share/coreneuron/nrnivmodl_core_makefile" "${make_params[@]}" VERBOSE=1

echo "[INFO] mods built successfully."
